#!/usr/bin/env ruby

require 'pry'
require 'tempfile'

def paths(under)
  Dir.entries(under).map { |entry| File.join(under, entry) }.select { |path| File.directory?(path) }
end

def git_paths
  paths = paths(ENV['HOME']) + paths(File.join(ENV['HOME'], 'code'))
  paths = paths.reject { |path| /\/\.+$/.match(path) }
  paths.select { |path| Dir.exists?(File.join(path, '.git')) }
end

def with_tempfile
  tempfile = Tempfile.new('gsr')
  temppath = tempfile.path
  begin
    yield temppath
  ensure
    tempfile.unlink
  end
end

git_paths.each do |dir|
  with_tempfile do |temppath|
    system("cd #{dir} && git status > #{temppath}")
    status = File.read(temppath)
    if status.include?('is ahead') or !(status.include?('working directory clean') || status.include?('nothing to commit'))
      puts
      puts dir
      puts status
    end
  end
end
